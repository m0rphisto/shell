APM=APM_RESULT='' # APM (Advanced Power Management)
precmd() {
   case "$pactive" in
      kprompt)
         # Print the previously configured title
         print -Pnr -- "$ptitle"
         pfiller=''
         ;;
      workprompt)
	      local TERMWIDTH=$[COLUMNS-1]
         local promptsize=${#${(%):---(%D{%F@%T%z})---}}
	      pfiller="\${(l.(($TERMWIDTH - $promptsize))..─.)}"
         print -Pnr -- "$ptitle"
         ;;
      zprompt)
         title zsh "$PWD" 
	      local TERMWIDTH=$[COLUMNS-2]
         local promptsize=${#${(%):---(%D{%F@%T%z})---}}
	      pfiller="\${(l.(($TERMWIDTH - $promptsize))..─.)}"
         ;;
      ptsprompt)
         PWDLEN=''
	      local TERMWIDTH=$[COLUMNS-1]
         print -Pnr -- "$ptitle"

         ###
         # Truncate the path if it's too long.
   
         local promptsize=${#${(%):---(%n@%m:%l)---()---}}
         local pwdsize=${#${(%):-%~}}
   
         if [[ "$promptsize + $pwdsize" -gt $TERMWIDTH ]]; then
            (( PWDLEN=$TERMWIDTH - $promptsize ))
         else
            pfiller="\${(l.(($TERMWIDTH - ($promptsize + $pwdsize)))..─.)}"
         fi

         ###
         # Get APM info.

         if which ibam > /dev/null; then
            APM_RESULT=`ibam --percentbattery`
         elif which apm > /dev/null; then
            APM_RESULT=`apm`
         fi
         ;;
   esac

   # Print a new line before the prompt, but only if it is not the first line
   if [ "$NEWLINE_BEFORE_PROMPT" = yes ]; then
      if [ -z "$_NEW_LINE_BEFORE_PROMPT" ]; then
         _NEW_LINE_BEFORE_PROMPT=1
      else
         print ""
      fi
   fi
}
